<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="public_sim"        default="false"/>
    <arg name="arm"/>
    <arg name="end_effector"/>
    <arg name="ft_sensor"/>
    <arg name="laser_model"/>
    <arg name="camera_model"/>
    <arg name="use_moveit_camera" default="false"/>
    <arg name="robot_namespace"         default=""/>

    <rosparam command="load" file="$(find tiago_controller_configuration)/config/joint_trajectory_controllers.yaml" />
    <rosparam command="load" file="$(find tiago_controller_configuration)/config/joint_state_controller_extra_joints.yaml" ns="joint_state_controller"/>
    <rosparam command="load" file="$(find tiago_controller_configuration)/config/joint_state_controller_extra_joints.yaml" ns="joint_torque_sensor_state_controller"/>
    <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />

    <!--<param name="mobile_base_controller/base_frame_id" value="$(arg robot_namespace)/base_footprint"/>
    <param name="mobile_base_controller/odom_frame_id" value="$(arg robot_namespace)/odom"/> -->

    <!-- Set up controllers depending of arm existance -->
    <arg name="controller_list" if="$(arg arm)"
        value="joint_state_controller
                torso_controller
                head_controller
                arm_controller
                mobile_base_controller"/>
    <arg name="controller_list" unless="$(arg arm)"
        value="joint_state_controller
                torso_controller
                head_controller
                mobile_base_controller"/>

    <!-- Controllers that come up started -->
    <node name="default_controllers_spawner"
          pkg="controller_manager" type="spawner" output="screen"
          args="--timeout 120
              $(arg controller_list) " />

    <!-- IMU -->
    <include file="$(find tiago_controller_configuration)/launch/imu_controller.launch"/>

    <!-- FT -->
    <group if="$(eval ft_sensor == 'schunk-ft')">
        <include file="$(find tiago_controller_configuration)/launch/force_torque_controller.launch"/>
    </group>

    <!-- different eef -->
    <group if="$(eval end_effector == 'pal-gripper')">
        <rosparam command="load" file="$(find tiago_controller_configuration)/config/pal-gripper_joint_trajectory_controllers.yaml" />
        <include file="$(find pal_gripper_controller_configuration_gazebo)/launch/gripper_controller.launch"/>
    </group>

    <group if="$(eval end_effector == 'schunk-wsg' or end_effector == 'schunk-wsg-cupro')">
        <rosparam command="load" file="$(find tiago_controller_configuration)/config/schunk-wsg_joint_trajectory_controllers.yaml" />
        <include file="$(find pal_wsg_gripper_controller_configuration_gazebo)/launch/gripper_fingertip_sensor_controller.launch">
          <arg name="finger" value="left"/>
        </include>
        <include file="$(find pal_wsg_gripper_controller_configuration_gazebo)/launch/gripper_fingertip_sensor_controller.launch">
          <arg name="finger" value="right"/>
        </include>
        <include file="$(find pal_wsg_gripper_controller_configuration_gazebo)/launch/gripper_controller.launch"/>
    </group>

    <group if="$(eval end_effector == 'pal-hey5')">
        <rosparam command="load" file="$(find tiago_controller_configuration)/config/pal-hey5_joint_trajectory_controllers.yaml" />
        <include file="$(find tiago_controller_configuration_gazebo)/launch/hey5_controller.launch"/>
    </group>

    <group if="$(eval end_effector == 'robotiq-2f-85')">
        <rosparam command="load" file="$(find tiago_controller_configuration)/config/robotiq-2f-85_joint_trajectory_controllers.yaml" />
        <include file="$(find pal_robotiq_controller_configuration_gazebo)/launch/gripper_controller.launch">
          <arg name="model" value="$(arg end_effector)" />
        </include>
    </group>

    <group if="$(eval end_effector == 'robotiq-2f-140')">
        <rosparam command="load" file="$(find tiago_controller_configuration)/config/robotiq-2f-140_joint_trajectory_controllers.yaml" />
        <include file="$(find pal_robotiq_controller_configuration_gazebo)/launch/gripper_controller.launch">
          <arg name="model" value="$(arg end_effector)" />
        </include>
    </group>

    
</launch>
